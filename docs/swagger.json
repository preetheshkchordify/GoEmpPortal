{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample CRUD API using Golang and MongoDB.",
        "title": "Go Mongo CRUD API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/register": {
            "post": {
                "description": "This endpoint registers a new user with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration request body",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterUserResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/dto.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid input"
                }
            }
        },
        "dto.RegisterUserRequest": {
            "type": "object",
            "properties": {
                "designation": {
                    "type": "string",
                    "example": "Software Engineer"
                },
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "employeeId": {
                    "type": "string",
                    "example": "EMP123"
                },
                "location": {
                    "type": "string",
                    "example": "New York"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "role": {
                    "type": "string",
                    "example": "60d21b4667d0d8992e610c85"
                }
            }
        },
        "dto.RegisterUserResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "User registered successfully"
                },
                "password": {
                    "type": "string",
                    "example": "randomGeneratedPass"
                },
                "username": {
                    "type": "string",
                    "example": "john@example.com"
                }
            }
        }
    }
}